# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      chmod -R 777  ./
      docker run -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-full-scan.py -t http://jv-dds-ccs-sit.anteraja.id/rest/speedQuery/waybill/byNo/web -g gen.conf -x OWASP-ZAP-Report.xml -r scan-report.html 
      
      true
      
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $XslPath = "$(System.DefaultWorkingDirectory)/OWASPToNUnit3.xslt"
      $XmlInputPath = "$(System.DefaultWorkingDirectory)/OWASP-ZAP-Report.xml"
      $XmlOutputPath = "$(System.DefaultWorkingDirectory)/Converted-OWASP-ZAP-Report.xml"
      $XslTransform = New-Object System.Xml.Xsl.XslCompiledTransform
      $XslTransform.Load($XslPath)
      $XslTransform.Transform($XmlInputPath, $XmlOutputPath)
- task: publishhtmlreport@1
  inputs:
    htmlType: 'genericHTML'
    htmlPath: 'scan-report.html'
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'NUnit'
    testResultsFiles: 'Converted-OWASP-ZAP-Report.xml'
- task: PublishPipelineArtifact@1
  condition: succeededOrFailed()
  inputs:
    targetPath: 'reports'
    artifact: 'ReportSecurityTest'
    